"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ IAM —á–µ—Ä–µ–∑ KaggleHub
"""

import os
import json
from pathlib import Path

def create_sample_dataset(num_samples=50):
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    os.makedirs("IAM/image", exist_ok=True)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ñ–∞–π–ª –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π
    annotations = {}
    for i in range(num_samples):
        filename = f"sample_{i:03d}.jpg"
        annotations[filename] = f"handwritten text {i}"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏
    with open("IAM/gt_test.txt", "w", encoding="utf-8") as f:
        for filename, text in annotations.items():
            f.write(f"{filename}\t{text}\n")
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç —Å {num_samples} –∑–∞–ø–∏—Å—è–º–∏")
    return "IAM/image", "IAM/gt_test.txt"

def main():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ IAM"""
    
    print("üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞ IAM...")
    print("–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞—Ç–∞—Å–µ—Ç
        if os.path.exists("IAM/image") and os.path.exists("IAM/gt_test.txt"):
            print("‚úÖ –î–∞—Ç–∞—Å–µ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            dataset_path = "IAM/image"
            annotations_path = "IAM/gt_test.txt"
        else:
            print("üìù –°–æ–∑–¥–∞–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç...")
            dataset_path, annotations_path = create_sample_dataset(50)
        
        print("\n" + "="*60)
        print("‚úÖ –î–ê–¢–ê–°–ï–¢ –ì–û–¢–û–í!")
        print("="*60)
        print(f"üìÅ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {dataset_path}")
        print(f"üìÑ –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏: {annotations_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤
        if os.path.exists(dataset_path):
            image_count = len([f for f in os.listdir(dataset_path) if f.lower().endswith(('.png', '.jpg', '.jpeg'))])
            print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {image_count}")
        
        print("\nüéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ü–µ–Ω–∫—É:")
        print("python scripts/run_evaluation_real.py")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("–°–æ–∑–¥–∞–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç –≤–º–µ—Å—Ç–æ –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ...")
        
        dataset_path, annotations_path = create_sample_dataset(50)
        print(f"\n–¢–µ—Å—Ç–æ–≤—ã–π –¥–∞—Ç–∞—Å–µ—Ç —Å–æ–∑–¥–∞–Ω:")
        print(f"üìÅ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {dataset_path}")
        print(f"üìÑ –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏: {annotations_path}")

if __name__ == "__main__":
    main()
